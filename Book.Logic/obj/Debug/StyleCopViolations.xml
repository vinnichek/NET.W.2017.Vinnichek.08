<StyleCopViolations>
  <Violation LineNumber="5" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Properties\AssemblyInfo.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="18" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Properties\AssemblyInfo.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="25" StartLine="25" StartColumn="2" EndLine="25" EndColumn="39" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Properties\AssemblyInfo.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="26" StartLine="26" StartColumn="2" EndLine="26" EndColumn="34" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Properties\AssemblyInfo.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="30" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParametersMustBeOnSameLineOrSeparateLines" RuleId="SA1117">All constructor parameters must be placed on the same line, or each parameter must be placed on a separate line.</Violation>
  <Violation LineNumber="30" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the constructor parameters are on separate lines, the first parameter must begin on the line beneath the name of the constructor.</Violation>
  <Violation LineNumber="30" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParameterMustFollowComma" RuleId="SA1115">The parameter must begin on the line after the previous parameter.</Violation>
  <Violation LineNumber="31" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParameterMustFollowComma" RuleId="SA1115">The parameter must begin on the line after the previous parameter.</Violation>
  <Violation LineNumber="54" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="68" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="82" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="96" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="110" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="124" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="138" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="249" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="StaticElementsMustAppearBeforeInstanceElements" RuleId="SA1204">All static public methods must be placed before all non-static public methods.</Violation>
  <Violation LineNumber="162" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="165" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="169" StartLine="169" StartColumn="23" EndLine="169" EndColumn="33" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="StatementMustNotUseUnnecessaryParenthesis" RuleId="SA1119">The line contains unnecessary parenthesis.</Violation>
  <Violation LineNumber="171" StartLine="171" StartColumn="23" EndLine="171" EndColumn="32" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="StatementMustNotUseUnnecessaryParenthesis" RuleId="SA1119">The line contains unnecessary parenthesis.</Violation>
  <Violation LineNumber="173" StartLine="173" StartColumn="23" EndLine="173" EndColumn="31" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="StatementMustNotUseUnnecessaryParenthesis" RuleId="SA1119">The line contains unnecessary parenthesis.</Violation>
  <Violation LineNumber="175" StartLine="175" StartColumn="23" EndLine="175" EndColumn="30" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="StatementMustNotUseUnnecessaryParenthesis" RuleId="SA1119">The line contains unnecessary parenthesis.</Violation>
  <Violation LineNumber="177" StartLine="177" StartColumn="23" EndLine="177" EndColumn="28" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="StatementMustNotUseUnnecessaryParenthesis" RuleId="SA1119">The line contains unnecessary parenthesis.</Violation>
  <Violation LineNumber="179" StartLine="179" StartColumn="23" EndLine="179" EndColumn="29" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="StatementMustNotUseUnnecessaryParenthesis" RuleId="SA1119">The line contains unnecessary parenthesis.</Violation>
  <Violation LineNumber="161" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="UseBuiltInTypeAlias" RuleId="SA1121">Use the built-in type alias 'string' rather than String or System.String.</Violation>
  <Violation LineNumber="193" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="207" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="208" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="209" StartLine="209" StartColumn="21" EndLine="209" EndColumn="26" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to Equals must begin with the 'this.', 'base.', 'object.' or 'Book.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="228" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="239" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="251" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="24" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookListService.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="26" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookListService.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="37" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookListService.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="39" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookListService.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="50" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookListService.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="54" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookListService.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="55" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookListService.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation LineNumber="66" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookListService.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="77" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookListService.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="87" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookListService.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="107" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookListService.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation LineNumber="98" StartLine="98" StartColumn="10" EndLine="98" EndColumn="76" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookListService.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="DocumentationLinesMustBeginWithSingleSpace" RuleId="SA1004">The documentation header line must start with a single space.</Violation>
  <Violation LineNumber="21" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="22" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="38" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="39" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="55" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="56" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="72" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="73" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="89" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="90" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="106" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="107" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="123" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="124" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="6" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookStorage\BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation LineNumber="28" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookStorage\BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All properties must be placed after all constructors.</Violation>
  <Violation LineNumber="45" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookStorage\BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="85" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookStorage\BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation LineNumber="82" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookStorage\BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParametersMustBeOnSameLineOrSeparateLines" RuleId="SA1117">All method parameters must be placed on the same line, or each parameter must be placed on a separate line.</Violation>
  <Violation LineNumber="82" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookStorage\BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Violation>
  <Violation LineNumber="82" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookStorage\BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParameterMustFollowComma" RuleId="SA1115">The parameter must begin on the line after the previous parameter.</Violation>
  <Violation LineNumber="83" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookStorage\BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParameterMustFollowComma" RuleId="SA1115">The parameter must begin on the line after the previous parameter.</Violation>
  <Violation LineNumber="93" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookStorage\BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="94" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookStorage\BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="23" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Finder\FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="34" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Finder\FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="50" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Finder\FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="61" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Finder\FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="76" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Finder\FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="87" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Finder\FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="103" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Finder\FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="114" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Finder\FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="131" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Finder\FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="142" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Finder\FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="161" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Finder\FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation LineNumber="172" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Finder\FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="189" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Finder\FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="200" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Finder\FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="8" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation LineNumber="37" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation LineNumber="10" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The field must have an access modifier.</Violation>
  <Violation LineNumber="12" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementMustNotBeOnSingleLine" RuleId="SA1502">The constructor must not be placed on a single line. The opening and closing curly brackets must each be placed on their own line.</Violation>
  <Violation LineNumber="21" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="30" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="32" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="2" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Logging\ILogger.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation LineNumber="7" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Logging\ILogger.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation LineNumber="8" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Logging\ILogger.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation LineNumber="9" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Logging\ILogger.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation LineNumber="10" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Logging\ILogger.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation LineNumber="3" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Logging\NLog.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementsMustBeSeparatedByBlankLine" RuleId="SA1516">Adjacent elements must be separated by a blank line.</Violation>
  <Violation LineNumber="7" Source="C:\Users\Ira Vinnichek\Desktop\NET.W.2017.Vinnichek.08-master\Book.Logic\Logging\NLog.cs" RuleNamespace="StyleCop.CSharp.NamingRules" Rule="StaticReadonlyFieldsMustBeginWithUpperCaseLetter" RuleId="SA1311">Static readonly fields must start with an upper-case letter: logger.</Violation>
</StyleCopViolations>