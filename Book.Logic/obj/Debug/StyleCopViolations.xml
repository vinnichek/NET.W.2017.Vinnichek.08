<StyleCopViolations>
  <Violation LineNumber="1" Source="/Users/vinnichek/Projects/Task/Book.Logic/Properties/AssemblyInfo.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="5" Source="/Users/vinnichek/Projects/Task/Book.Logic/Properties/AssemblyInfo.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="18" Source="/Users/vinnichek/Projects/Task/Book.Logic/Properties/AssemblyInfo.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="25" StartLine="25" StartColumn="2" EndLine="25" EndColumn="39" Source="/Users/vinnichek/Projects/Task/Book.Logic/Properties/AssemblyInfo.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="26" StartLine="26" StartColumn="2" EndLine="26" EndColumn="34" Source="/Users/vinnichek/Projects/Task/Book.Logic/Properties/AssemblyInfo.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="1" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="2" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="3" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="7" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="10" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="11" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="12" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="13" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="14" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="15" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="16" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="30" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ConstructorSummaryDocumentationMustBeginWithStandardText" RuleId="SA1642">The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the &lt;see cref="Book" /&gt; class.</Violation>
  <Violation LineNumber="30" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParametersMustBeOnSameLineOrSeparateLines" RuleId="SA1117">All constructor parameters must be placed on the same line, or each parameter must be placed on a separate line.</Violation>
  <Violation LineNumber="30" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the constructor parameters are on separate lines, the first parameter must begin on the line beneath the name of the constructor.</Violation>
  <Violation LineNumber="30" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParameterMustFollowComma" RuleId="SA1115">The parameter must begin on the line after the previous parameter.</Violation>
  <Violation LineNumber="31" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParameterMustFollowComma" RuleId="SA1115">The parameter must begin on the line after the previous parameter.</Violation>
  <Violation LineNumber="33" StartLine="33" StartColumn="14" EndLine="33" EndColumn="21" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to BookISBN must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="34" StartLine="34" StartColumn="14" EndLine="34" EndColumn="19" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to Author must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="35" StartLine="35" StartColumn="14" EndLine="35" EndColumn="18" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to Title must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="36" StartLine="36" StartColumn="14" EndLine="36" EndColumn="28" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to PublishingHouse must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="37" StartLine="37" StartColumn="14" EndLine="37" EndColumn="29" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to YearOfPublishing must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="38" StartLine="38" StartColumn="14" EndLine="38" EndColumn="26" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to NumberOfPages must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="39" StartLine="39" StartColumn="14" EndLine="39" EndColumn="18" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to Price must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="48" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PropertySummaryDocumentationMustMatchAccessors" RuleId="SA1623">The property's documentation summary text must begin with: Gets or sets</Violation>
  <Violation LineNumber="50" StartLine="50" StartColumn="21" EndLine="50" EndColumn="28" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to bookISBN must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="54" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="55" StartLine="55" StartColumn="18" EndLine="55" EndColumn="25" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to bookISBN must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="62" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PropertySummaryDocumentationMustMatchAccessors" RuleId="SA1623">The property's documentation summary text must begin with: Gets or sets</Violation>
  <Violation LineNumber="64" StartLine="64" StartColumn="21" EndLine="64" EndColumn="26" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to author must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="68" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="69" StartLine="69" StartColumn="18" EndLine="69" EndColumn="23" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to author must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="76" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PropertySummaryDocumentationMustMatchAccessors" RuleId="SA1623">The property's documentation summary text must begin with: Gets or sets</Violation>
  <Violation LineNumber="78" StartLine="78" StartColumn="21" EndLine="78" EndColumn="25" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to title must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="82" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="83" StartLine="83" StartColumn="18" EndLine="83" EndColumn="22" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to title must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="90" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PropertySummaryDocumentationMustMatchAccessors" RuleId="SA1623">The property's documentation summary text must begin with: Gets or sets</Violation>
  <Violation LineNumber="92" StartLine="92" StartColumn="21" EndLine="92" EndColumn="35" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to publishingHouse must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="96" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="97" StartLine="97" StartColumn="18" EndLine="97" EndColumn="32" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to publishingHouse must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="104" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PropertySummaryDocumentationMustMatchAccessors" RuleId="SA1623">The property's documentation summary text must begin with: Gets or sets</Violation>
  <Violation LineNumber="106" StartLine="106" StartColumn="21" EndLine="106" EndColumn="36" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to yearOfPublishing must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="110" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="111" StartLine="111" StartColumn="18" EndLine="111" EndColumn="33" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to yearOfPublishing must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="118" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PropertySummaryDocumentationMustMatchAccessors" RuleId="SA1623">The property's documentation summary text must begin with: Gets or sets</Violation>
  <Violation LineNumber="120" StartLine="120" StartColumn="21" EndLine="120" EndColumn="33" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to numberOfPages must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="124" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="125" StartLine="125" StartColumn="18" EndLine="125" EndColumn="30" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to numberOfPages must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="132" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="PropertySummaryDocumentationMustMatchAccessors" RuleId="SA1623">The property's documentation summary text must begin with: Gets or sets</Violation>
  <Violation LineNumber="134" StartLine="134" StartColumn="21" EndLine="134" EndColumn="25" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to price must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="138" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="139" StartLine="139" StartColumn="18" EndLine="139" EndColumn="22" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to price must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="185" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="250" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="StaticElementsMustAppearBeforeInstanceElements" RuleId="SA1204">All static public methods must be placed before all non-static public methods.</Violation>
  <Violation LineNumber="208" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="209" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="210" StartLine="210" StartColumn="21" EndLine="210" EndColumn="26" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixCallsCorrectly" RuleId="SA1126">The call to Equals must begin with the 'this.', 'base.', 'object.' or 'Book.' prefix to indicate the intended method call. </Violation>
  <Violation LineNumber="229" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="240" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="250" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementParametersMustBeDocumented" RuleId="SA1611">The documentation header must contain param tags matching the element's parameter list.</Violation>
  <Violation LineNumber="252" Source="/Users/vinnichek/Projects/Task/Book.Logic/Book.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="1" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="2" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="3" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="4" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="5" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="9" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="12" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="24" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="26" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="25" StartLine="25" StartColumn="18" EndLine="25" EndColumn="25" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to bookList must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="27" StartLine="27" StartColumn="14" EndLine="27" EndColumn="21" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to bookList must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="37" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="39" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="38" StartLine="38" StartColumn="19" EndLine="38" EndColumn="26" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to bookList must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="40" StartLine="40" StartColumn="14" EndLine="40" EndColumn="21" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to bookList must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="47" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementReturnValueMustBeDocumented" RuleId="SA1615">The documentation header must contain a returns tag since the element has a return value.</Violation>
  <Violation LineNumber="50" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="54" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="55" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation LineNumber="51" StartLine="51" StartColumn="36" EndLine="51" EndColumn="43" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to bookList must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="66" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="67" StartLine="67" StartColumn="14" EndLine="67" EndColumn="21" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to bookList must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="77" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="78" StartLine="78" StartColumn="37" EndLine="78" EndColumn="44" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to bookList must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="87" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="107" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation LineNumber="103" StartLine="103" StartColumn="37" EndLine="103" EndColumn="44" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to bookList must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="98" StartLine="98" StartColumn="10" EndLine="98" EndColumn="76" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookListService.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="DocumentationLinesMustBeginWithSingleSpace" RuleId="SA1004">The documentation header line must start with a single space.</Violation>
  <Violation LineNumber="1" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="3" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="7" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="19" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="21" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="22" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="36" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="38" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="39" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="53" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="55" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="56" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="70" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="72" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="73" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="87" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="89" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="90" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="104" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="106" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="107" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="121" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="123" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="124" Source="/Users/vinnichek/Projects/Task/Book.Logic/ComparerMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="1" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="6" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CodeMustNotContainMultipleBlankLinesInARow" RuleId="SA1507">The code must not contain multiple blank lines in a row.</Violation>
  <Violation LineNumber="1" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="2" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="3" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="4" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="9" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="12" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="16" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The property must have a documentation header.</Violation>
  <Violation LineNumber="28" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="ElementsMustAppearInTheCorrectOrder" RuleId="SA1201">All properties must be placed after all constructors.</Violation>
  <Violation LineNumber="18" StartLine="18" StartColumn="21" EndLine="18" EndColumn="24" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to path must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="21" StartLine="21" StartColumn="18" EndLine="21" EndColumn="26" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to CheckPath must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="22" StartLine="22" StartColumn="18" EndLine="22" EndColumn="21" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to path must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="28" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation LineNumber="30" StartLine="30" StartColumn="14" EndLine="30" EndColumn="17" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to Path must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="40" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementParametersMustBeDocumented" RuleId="SA1611">The documentation header must contain param tags matching the element's parameter list.</Violation>
  <Violation LineNumber="40" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="VoidReturnValueMustNotBeDocumented" RuleId="SA1617">The documentation header should not contain a returns tag, since the element has no return value.</Violation>
  <Violation LineNumber="45" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="42" StartLine="42" StartColumn="70" EndLine="42" EndColumn="73" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to path must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="85" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation LineNumber="82" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParametersMustBeOnSameLineOrSeparateLines" RuleId="SA1117">All method parameters must be placed on the same line, or each parameter must be placed on a separate line.</Violation>
  <Violation LineNumber="82" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="SplitParametersMustStartOnLineAfterDeclaration" RuleId="SA1116">If the method parameters are on separate lines, the first parameter must begin on the line beneath the name of the method.</Violation>
  <Violation LineNumber="82" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParameterMustFollowComma" RuleId="SA1115">The parameter must begin on the line after the previous parameter.</Violation>
  <Violation LineNumber="83" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="ParameterMustFollowComma" RuleId="SA1115">The parameter must begin on the line after the previous parameter.</Violation>
  <Violation LineNumber="70" StartLine="70" StartColumn="70" EndLine="70" EndColumn="73" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to path must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="91" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="93" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="94" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/BookBinaryStorage.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="1" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/IBookStorage.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/IBookStorage.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="2" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/IBookStorage.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="6" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookStorage/IBookStorage.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The interface must have a documentation header.</Violation>
  <Violation LineNumber="1" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="5" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="14" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="20" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ConstructorSummaryDocumentationMustBeginWithStandardText" RuleId="SA1642">The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the &lt;see cref="FindBookByBookISBN" /&gt; class.</Violation>
  <Violation LineNumber="23" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="34" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="36" StartLine="36" StartColumn="42" EndLine="36" EndColumn="49" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to bookISBN must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="40" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="42" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="48" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ConstructorSummaryDocumentationMustBeginWithStandardText" RuleId="SA1642">The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the &lt;see cref="FindBookByAuthor" /&gt; class.</Violation>
  <Violation LineNumber="50" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="61" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="61" StartLine="61" StartColumn="38" EndLine="61" EndColumn="43" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to author must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="62" StartLine="62" StartColumn="40" EndLine="62" EndColumn="45" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to author must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="66" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="68" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="74" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ConstructorSummaryDocumentationMustBeginWithStandardText" RuleId="SA1642">The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the &lt;see cref="FindBookByTitle" /&gt; class.</Violation>
  <Violation LineNumber="76" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="87" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="87" StartLine="87" StartColumn="38" EndLine="87" EndColumn="42" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to title must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="89" StartLine="89" StartColumn="39" EndLine="89" EndColumn="43" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to title must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="93" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="95" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="101" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ConstructorSummaryDocumentationMustBeginWithStandardText" RuleId="SA1642">The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the &lt;see cref="FindBookByPublishingHouse" /&gt; class.</Violation>
  <Violation LineNumber="103" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="114" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="114" StartLine="114" StartColumn="38" EndLine="114" EndColumn="52" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to publishingHouse must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="116" StartLine="116" StartColumn="49" EndLine="116" EndColumn="63" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to publishingHouse must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="120" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="122" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="128" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ConstructorSummaryDocumentationMustBeginWithStandardText" RuleId="SA1642">The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the &lt;see cref="FindBookByYearOfPublishing" /&gt; class.</Violation>
  <Violation LineNumber="131" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="142" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="142" StartLine="142" StartColumn="38" EndLine="142" EndColumn="53" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to yearOfPublishing must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="144" StartLine="144" StartColumn="50" EndLine="144" EndColumn="65" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to yearOfPublishing must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="148" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="150" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="156" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ConstructorSummaryDocumentationMustBeginWithStandardText" RuleId="SA1642">The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the &lt;see cref="FindBookByNumberOfPages" /&gt; class.</Violation>
  <Violation LineNumber="161" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketMustBeFollowedByBlankLine" RuleId="SA1513">Statements or elements wrapped in curly brackets must be followed by a blank line.</Violation>
  <Violation LineNumber="172" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="172" StartLine="172" StartColumn="38" EndLine="172" EndColumn="50" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to numberOfPages must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="174" StartLine="174" StartColumn="47" EndLine="174" EndColumn="59" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to numberOfPages must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="178" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="180" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="186" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ConstructorSummaryDocumentationMustBeginWithStandardText" RuleId="SA1642">The documentation text within the constructor's summary tag must begin with the text: Initializes a new instance of the &lt;see cref="FindBookByPrice" /&gt; class.</Violation>
  <Violation LineNumber="189" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="200" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="200" StartLine="200" StartColumn="38" EndLine="200" EndColumn="42" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to price must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="202" StartLine="202" StartColumn="39" EndLine="202" EndColumn="43" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/FinderMethods.cs" RuleNamespace="StyleCop.CSharp.ReadabilityRules" Rule="PrefixLocalCallsWithThis" RuleId="SA1101">The call to price must begin with the 'this.' prefix to indicate that the item is a member of the class.</Violation>
  <Violation LineNumber="1" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/IFinder.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/IFinder.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="2" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/IFinder.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="13" Source="/Users/vinnichek/Projects/Task/Book.Logic/Finder/IFinder.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="1" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="FileMustHaveHeader" RuleId="SA1633">The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</Violation>
  <Violation LineNumber="1" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="2" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="3" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.OrderingRules" Rule="UsingDirectivesMustBePlacedWithinNamespace" RuleId="SA1200">All using directives must be placed inside of the namespace.</Violation>
  <Violation LineNumber="7" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The class must have a documentation header.</Violation>
  <Violation LineNumber="8" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="OpeningCurlyBracketsMustNotBeFollowedByBlankLine" RuleId="SA1505">An opening curly bracket must not be followed by a blank line.</Violation>
  <Violation LineNumber="43" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" RuleId="SA1508">A closing curly bracket must not be preceded by a blank line.</Violation>
  <Violation LineNumber="10" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The field must have a documentation header.</Violation>
  <Violation LineNumber="10" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.MaintainabilityRules" Rule="AccessModifierMustBeDeclared" RuleId="SA1400">The field must have an access modifier.</Violation>
  <Violation LineNumber="12" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation LineNumber="12" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="ElementMustNotBeOnSingleLine" RuleId="SA1502">The constructor must not be placed on a single line. The opening and closing curly brackets must each be placed on their own line.</Violation>
  <Violation LineNumber="14" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The constructor must have a documentation header.</Violation>
  <Violation LineNumber="19" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="21" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="25" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.DocumentationRules" Rule="ElementsMustBeDocumented" RuleId="SA1600">The method must have a documentation header.</Violation>
  <Violation LineNumber="32" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="33" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="34" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="35" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="36" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="37" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="38" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="CurlyBracketsMustNotBeOmitted" RuleId="SA1503">The body of the if statement must be wrapped in opening and closing curly brackets.</Violation>
  <Violation LineNumber="30" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.LayoutRules" Rule="SingleLineCommentsMustNotBeFollowedByBlankLine" RuleId="SA1512">A single-line comment must not be followed by a blank line. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="29" StartLine="29" StartColumn="14" EndLine="29" EndColumn="178" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
  <Violation LineNumber="30" StartLine="30" StartColumn="17" EndLine="30" EndColumn="74" Source="/Users/vinnichek/Projects/Task/Book.Logic/BookFormatProvider.cs" RuleNamespace="StyleCop.CSharp.SpacingRules" Rule="SingleLineCommentsMustBeginWithSingleSpace" RuleId="SA1005">The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</Violation>
</StyleCopViolations>